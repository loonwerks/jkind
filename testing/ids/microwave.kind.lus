-- This file is translated from the Rockwell Collins microwave in Simulink.
-- It lead to the discovery of issue #1.

-- This file has 13 properties, all of them valid.
-- Properties r2 and r7 require invariant generation.

node microwave(KP_START: bool; 
      KP_CLEAR: bool; 
      KP_0: bool; 
      KP_1: bool; 
      KP_2: bool; 
      KP_3: bool; 
      KP_4: bool; 
      KP_5: bool; 
      KP_6: bool; 
      KP_7: bool; 
      KP_8: bool; 
      KP_9: bool; 
      DOOR_CLOSED: bool)
   returns (LEFT_DIGIT: int; 
      MIDDLE_DIGIT: int; 
      RIGHT_DIGIT: int; 
      MODE: int);

var
   microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic: subrange [0, 2] of int; 
   microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING: subrange [0, 2] of int; 
   microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining: int; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step: bool; 
   microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1: int; 
   microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1: int; 
   microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1: int; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8: bool; 
   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9: bool; 
   microwave!microwave!LE!Detector12!Logical!Operator1: bool; 
   microwave!microwave!LE!Detector1!Logical!Operator1: bool; 
   microwave!microwave!Unit!Delay2: bool; 
   s1: bool; 
   r1: bool; 
   r3: bool; 
   r4: bool; 
   s2: bool; 
   r7: bool; 
   r8: bool; 
   r2: bool; 
   r5: bool; 
   r6: bool; 
   r10: bool; 
   r11: bool; 
   r12: bool;


let --%MAIN
   r6 = (true -> (( not (( pre (MODE = 2)) and 
      (( pre (((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT)) > 0))) or 
      (( not (( not DOOR_CLOSED) or 
      (( not ( pre KP_CLEAR)) and 
      KP_CLEAR))) or 
      (MODE = 3))));

   r5 = (true -> (( not (( pre ((MODE = 2) or 
      (MODE = 3))) and 
      (( pre (((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT)) <= 0))) or 
      (MODE = 1)));

   r2 = (true -> (( not ( pre (MODE = 1))) or 
      (( not ((( not ( pre KP_CLEAR)) and 
      KP_CLEAR) and 
      ((((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT) > 0))) or 
      ((MODE = 2) or 
      (MODE = 3)))));

   microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 = (0 -> 
      (if microwave!microwave!Unit!Delay2
         then 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step
                  then 0
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR
                  then 0
                  else 
               (if (
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0)))
                     then 0
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1)))
                     then 1
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2)))
                     then 2
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3)))
                     then 3
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4)))
                     then 4
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5)))
                     then 5
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6)))
                     then 6
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7)))
                     then 7
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8)))
                     then 8
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9)))
                     then 9
                     else 10)))))))))) <= 9)
                  then ( pre microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1)
                  else ( pre microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1))))
         else ( pre microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1)));

   microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 = (0 -> 
      (if microwave!microwave!Unit!Delay2
         then 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step
                  then 0
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR
                  then 0
                  else 
               (if (
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0)))
                     then 0
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1)))
                     then 1
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2)))
                     then 2
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3)))
                     then 3
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4)))
                     then 4
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5)))
                     then 5
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6)))
                     then 6
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7)))
                     then 7
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8)))
                     then 8
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9)))
                     then 9
                     else 10)))))))))) <= 9)
                  then ( pre microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1)
                  else ( pre microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1))))
         else ( pre microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1)));

   microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 = (
      (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR
         then 0
         else 
      (if (
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0
            then 0
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1
            then 1
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2
            then 2
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3
            then 3
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4
            then 4
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5
            then 5
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6
            then 6
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7
            then 7
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8
            then 8
            else 
         (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9
            then 9
            else 10)))))))))) <= 9)
         then 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0
                  then 0
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1
                  then 1
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2
                  then 2
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3
                  then 3
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4
                  then 4
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5
                  then 5
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6
                  then 6
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7
                  then 7
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8
                  then 8
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9
                  then 9
                  else 10))))))))))
         else 0)) -> 
      (if microwave!microwave!Unit!Delay2
         then 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step
                  then 
                        (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR
                           then 0
                           else 
                        (if (
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0
                              then 0
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1
                              then 1
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2
                              then 2
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3
                              then 3
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4
                              then 4
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5
                              then 5
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6
                              then 6
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7
                              then 7
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8
                              then 8
                              else 
                           (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9
                              then 9
                              else 10)))))))))) <= 9)
                           then 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0
                                    then 0
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1
                                    then 1
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2
                                    then 2
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3
                                    then 3
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4
                                    then 4
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5
                                    then 5
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6
                                    then 6
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7
                                    then 7
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8
                                    then 8
                                    else 
                                 (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9
                                    then 9
                                    else 10))))))))))
                           else 0))
                  else 
               (if rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR
                  then 0
                  else 
               (if (
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0)))
                     then 0
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1)))
                     then 1
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2)))
                     then 2
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3)))
                     then 3
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4)))
                     then 4
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5)))
                     then 5
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6)))
                     then 6
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7)))
                     then 7
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8)))
                     then 8
                     else 
                  (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9 and 
                     ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9)))
                     then 9
                     else 10)))))))))) <= 9)
                  then 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0)))
                           then 0
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1)))
                           then 1
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2)))
                           then 2
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3)))
                           then 3
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4)))
                           then 4
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5)))
                           then 5
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6)))
                           then 6
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7)))
                           then 7
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8)))
                           then 8
                           else 
                        (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9 and 
                           ( not ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9)))
                           then 9
                           else 10))))))))))
                  else ( pre microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1))))
         else ( pre microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1)));

   microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining = (0 -> ( pre 
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then 0
                                             else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
                                    else 0)
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1)
                                    else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then 0
                                                      else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
                                             else 0)
                                    else 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining)
                           else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining)))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then 0
                                    else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
                           else 0)
                  else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then 0
                  else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
         else 0))));

   microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = (0 -> ( pre 
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if (
                                    (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                                       then 0
                                       else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING) = 2)
                                    then 0
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                                    then 0
                                    else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          2
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: uint8((steps_remaining > uint16(0)))
                                             Destination: microwave_mode_logic>RUNNING>rlt!outerloop!0 *)
                                          1
                                    else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (* Exiting state: microwave_mode_logic>RUNNING. *)
                                          0
                                    else 
                                 (if (microwave!microwave!LE!Detector12!Logical!Operator1 and 
                                    DOOR_CLOSED)
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          1
                                    else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING))
                           else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING)))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if (microwave!microwave!LE!Detector12!Logical!Operator1 and 
                           (
                           (if microwave!microwave!Unit!Delay2
                              then 
                                    (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                       ( not microwave!microwave!Unit!Delay2))
                                       then 0
                                       else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
                              else 0) > 0))
                           then 
                                 (* Evaluating Transition
                                    Source: microwave_mode_logic>SETUP.microwave_mode_logic>junc8
                                    Transition Guarded By: (uint8(start) and uint8((steps_remaining > uint16(0))))
                                    Destination: microwave_mode_logic>RUNNING *)
                                 
                                 (if DOOR_CLOSED
                                    then 
                                          (* Entering state: microwave_mode_logic>RUNNING>COOKING. *)
                                          1
                                    else 
                                          (* Entering state: microwave_mode_logic>RUNNING>SUSPENDED. *)
                                          2)
                           else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING)
                  else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING))
         else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING)));

   microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = (0 -> ( pre 
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (* Entering state: microwave_mode_logic>SETUP. *)
                                 2
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (* Evaluating Transition
                                    Source: microwave_mode_logic>RUNNING>COOKING
                                    Transition Guarded By: (clear or (not DOOR_CLOSED))
                                    Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                 microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 2
                                    else 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic)
                           else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic)))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if (microwave!microwave!LE!Detector12!Logical!Operator1 and 
                           (
                           (if microwave!microwave!Unit!Delay2
                              then 
                                    (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                       ( not microwave!microwave!Unit!Delay2))
                                       then 0
                                       else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
                              else 0) > 0))
                           then 
                                 (* Entering state: microwave_mode_logic>RUNNING>COOKING.
                                    Evaluating Transition
                                    Source: microwave_mode_logic>SETUP.microwave_mode_logic>junc8
                                    Transition Guarded By: (uint8(start) and uint8((steps_remaining > uint16(0))))
                                    Destination: microwave_mode_logic>RUNNING *)
                                 1
                           else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic)
                  else microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic))
         else 2)));

   MODE = (
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (* Evaluating Transition
                                    Source: microwave_mode_logic>RUNNING
                                    Transition Guarded By: uint8((steps_remaining <= uint16(0)))
                                    Destination: microwave_mode_logic>junc9 *)
                                 1
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          3
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: uint8((steps_remaining > uint16(0)))
                                             Destination: microwave_mode_logic>RUNNING>rlt!outerloop!0 *)
                                          2
                                    else 0))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 1
                                    else 
                                 (if (microwave!microwave!LE!Detector12!Logical!Operator1 and 
                                    DOOR_CLOSED)
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          2
                                    else 0))
                           else 0)))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if (microwave!microwave!LE!Detector12!Logical!Operator1 and 
                           (
                           (if microwave!microwave!Unit!Delay2
                              then 
                                    (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                       ( not microwave!microwave!Unit!Delay2))
                                       then 0
                                       else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
                              else 0) > 0))
                           then 
                                 (* Evaluating Transition
                                    Source: microwave_mode_logic>SETUP.microwave_mode_logic>junc8
                                    Transition Guarded By: (uint8(start) and uint8((steps_remaining > uint16(0))))
                                    Destination: microwave_mode_logic>RUNNING *)
                                 
                                 (if DOOR_CLOSED
                                    then 2
                                    else 3)
                           else 0)
                  else 0))
         else 1) -> 
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (* Evaluating Transition
                                    Source: microwave_mode_logic>RUNNING
                                    Transition Guarded By: uint8((steps_remaining <= uint16(0)))
                                    Destination: microwave_mode_logic>junc9 *)
                                 1
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          3
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: uint8((steps_remaining > uint16(0)))
                                             Destination: microwave_mode_logic>RUNNING>rlt!outerloop!0 *)
                                          2
                                    else ( pre MODE)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 1
                                    else 
                                 (if (microwave!microwave!LE!Detector12!Logical!Operator1 and 
                                    DOOR_CLOSED)
                                    then 
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          2
                                    else ( pre MODE)))
                           else ( pre MODE))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if (microwave!microwave!LE!Detector12!Logical!Operator1 and 
                           (
                           (if microwave!microwave!Unit!Delay2
                              then 
                                    (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                       ( not microwave!microwave!Unit!Delay2))
                                       then 0
                                       else ((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)))
                              else 0) > 0))
                           then 
                                 (* Evaluating Transition
                                    Source: microwave_mode_logic>SETUP.microwave_mode_logic>junc8
                                    Transition Guarded By: (uint8(start) and uint8((steps_remaining > uint16(0))))
                                    Destination: microwave_mode_logic>RUNNING *)
                                 
                                 (if DOOR_CLOSED
                                    then 2
                                    else 3)
                           else ( pre MODE))
                  else ( pre MODE)))
         else 1));

   MIDDLE_DIGIT = ((
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then (0 div 1)
                                             else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                    else (0 div 1))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then ((microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1) div 1)
                                    else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then (0 div 1)
                                                      else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                             else (0 div 1))
                                    else (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))
                           else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then (0 div 1)
                                    else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                           else (0 div 1))
                  else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then (0 div 1)
                  else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
         else (0 div 1))) - ((
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then (0 div 1)
                                             else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                    else (0 div 1))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then ((microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1) div 1)
                                    else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then (0 div 1)
                                                      else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                             else (0 div 1))
                                    else (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))
                           else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then (0 div 1)
                                    else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                           else (0 div 1))
                  else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then (0 div 1)
                  else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
         else (0 div 1))) div 60) * 60)) div 10);

   RIGHT_DIGIT = ((
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then (0 div 1)
                                             else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                    else (0 div 1))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then ((microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1) div 1)
                                    else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then (0 div 1)
                                                      else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                             else (0 div 1))
                                    else (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))
                           else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then (0 div 1)
                                    else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                           else (0 div 1))
                  else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then (0 div 1)
                  else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
         else (0 div 1))) - ((
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then (0 div 1)
                                             else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                    else (0 div 1))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then ((microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1) div 1)
                                    else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then (0 div 1)
                                                      else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                             else (0 div 1))
                                    else (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))
                           else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then (0 div 1)
                                    else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                           else (0 div 1))
                  else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then (0 div 1)
                  else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
         else (0 div 1))) div 60) * 60)) - (((
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then (0 div 1)
                                             else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                    else (0 div 1))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then ((microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1) div 1)
                                    else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then (0 div 1)
                                                      else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                             else (0 div 1))
                                    else (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))
                           else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then (0 div 1)
                                    else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                           else (0 div 1))
                  else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then (0 div 1)
                  else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
         else (0 div 1))) - ((
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then (0 div 1)
                                             else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                    else (0 div 1))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then ((microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1) div 1)
                                    else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then (0 div 1)
                                                      else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                             else (0 div 1))
                                    else (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))
                           else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then (0 div 1)
                                    else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                           else (0 div 1))
                  else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then (0 div 1)
                  else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
         else (0 div 1))) div 60) * 60)) div 10) * 10));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8 = (KP_8 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_8
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_8)));

   s1 = ((not (MODE = 2)) or 
      DOOR_CLOSED);

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1 = (KP_1 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_1
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_1)));

   microwave!microwave!Unit!Delay2 = (true -> ( pre (1 = MODE)));

   r8 = (true -> (( not ( pre (MODE = 3))) or 
      (( not (((( not ( pre KP_CLEAR)) and 
      KP_CLEAR) and 
      DOOR_CLOSED) and 
      ( not (( not ( pre KP_CLEAR)) and 
      KP_CLEAR)))) or 
      (MODE = 2))));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0 = (KP_0 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_0
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_0)));

   r4 = ((( not ((MODE = 2) or 
      (MODE = 3))) or 
      (DOOR_CLOSED or 
      (MODE = 3))) -> (( pre ((MODE = 2) or 
      (MODE = 3))) or 
      (( not ((MODE = 2) or 
      (MODE = 3))) or 
      (DOOR_CLOSED or 
      (MODE = 3)))));

   r11 = (true -> (( not ( pre (MODE = 2))) or 
      ((not (MODE = 2)) or 
      (((((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT) + 1) = ( pre (((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT))))));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9 = (KP_9 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_9
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_9)));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5 = (KP_5 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_5
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_5)));

   r10 = (true -> (( not ( pre ((MODE = 2) or 
      (MODE = 3)))) or 
      (( not ((MODE = 2) or 
      (MODE = 3))) or 
      ((((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT) <= ( pre (((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT))))));

   r7 = (true -> (( not ( pre (MODE = 3))) or 
      (( not (( not ( pre KP_CLEAR)) and 
      KP_CLEAR)) or 
      (MODE = 1))));

   LEFT_DIGIT = (
      (if (not (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 0))
         then 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 1)
                  then 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining <= 0)
                           then 
                                 (if microwave!microwave!Unit!Delay2
                                    then 
                                          (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                             ( not microwave!microwave!Unit!Delay2))
                                             then (0 div 1)
                                             else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                    else (0 div 1))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 1)
                           then 
                                 (if (microwave!microwave!LE!Detector1!Logical!Operator1 or 
                                    ( not DOOR_CLOSED))
                                    then (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>COOKING
                                             Transition Guarded By: (clear or (not DOOR_CLOSED))
                                             Destination: microwave_mode_logic>RUNNING>SUSPENDED *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)
                                    else 
                                 (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining > 0)
                                    then ((microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining - 1) div 1)
                                    else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
                           else 
                        (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic!RUNNING = 2)
                           then 
                                 (if microwave!microwave!LE!Detector1!Logical!Operator1
                                    then 
                                          (if microwave!microwave!Unit!Delay2
                                             then 
                                                   (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                                      ( not microwave!microwave!Unit!Delay2))
                                                      then (0 div 1)
                                                      else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                                             else (0 div 1))
                                    else (
                                          (* Evaluating Transition
                                             Source: microwave_mode_logic>RUNNING>SUSPENDED
                                             Transition Guarded By: (start and DOOR_CLOSED)
                                             Destination: microwave_mode_logic>RUNNING>COOKING *)
                                          microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))
                           else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1))))
                  else 
               (if (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!states!microwave_mode_logic = 2)
                  then 
                        (if microwave!microwave!Unit!Delay2
                           then 
                                 (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                                    ( not microwave!microwave!Unit!Delay2))
                                    then (0 div 1)
                                    else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
                           else (0 div 1))
                  else (microwave_mode_logic!main!simp!rlt_node_state1!rlt_chart_data!outports!steps_remaining div 1)))
         else 
      (if microwave!microwave!Unit!Delay2
         then 
               (if (rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step and 
                  ( not microwave!microwave!Unit!Delay2))
                  then (0 div 1)
                  else (((microwave!microwave!KEYPAD_PROCESSING!RIGHT_DIGIT!Switch1 + (microwave!microwave!KEYPAD_PROCESSING!MIDDLE_DIGIT!Switch1 * 10)) + (microwave!microwave!KEYPAD_PROCESSING!LEFT_DIGIT!Switch1 * 60)) div 1))
         else (0 div 1))) div 60);

   microwave!microwave!LE!Detector1!Logical!Operator1 = (KP_CLEAR -> (KP_CLEAR and 
      ( not ( pre KP_CLEAR))));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR = (KP_CLEAR -> 
      (if microwave!microwave!Unit!Delay2
         then KP_CLEAR
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_CLEAR)));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7 = (KP_7 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_7
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_7)));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6 = (KP_6 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_6
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_6)));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2 = (KP_2 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_2
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_2)));

   r3 = ((( not ((MODE = 2) or 
      (MODE = 3))) or 
      (( not DOOR_CLOSED) or 
      (MODE = 2))) -> (( pre ((MODE = 2) or 
      (MODE = 3))) or 
      (( not ((MODE = 2) or 
      (MODE = 3))) or 
      (( not DOOR_CLOSED) or 
      (MODE = 2)))));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4 = (KP_4 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_4
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_4)));

   r1 = ((MODE = 1) -> true);

   r12 = (true -> (( not ( pre (MODE = 3))) or 
      ((not (MODE = 3)) or 
      ((((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT) = ( pre (((LEFT_DIGIT * 60) + (MIDDLE_DIGIT * 10)) + RIGHT_DIGIT))))));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3 = (KP_3 -> 
      (if microwave!microwave!Unit!Delay2
         then KP_3
         else ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_clocked_inp!KP_3)));

   rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step = (true -> (( not microwave!microwave!Unit!Delay2) or 
      (( not ( pre microwave!microwave!Unit!Delay2)) and 
      ( pre rlt_condact!resetmicrowave!microwave!KEYPAD_PROCESSING!rlt_init_step))));

   s2 = (true -> (( not ( pre (MODE = 2))) or 
      (( not (( not ( pre KP_CLEAR)) and 
      KP_CLEAR)) or 
      (not (MODE = 2)))));

   microwave!microwave!LE!Detector12!Logical!Operator1 = (KP_START -> (KP_START and 
      ( not ( pre KP_START))));

   --Line 61
--%PROPERTY s1; 

   --Line 67
--%PROPERTY r1; 

   --Line 75
--%PROPERTY r3; 

   --Line 83
--%PROPERTY r4; 

   --Line 90
--%PROPERTY s2; 

   --Line 97
--%PROPERTY r7; 

   --Line 105
--%PROPERTY r8; 

   --Line 124
--%PROPERTY r2; 

   --Line 131
--%PROPERTY r5; 

   --Line 139
--%PROPERTY r6; 

   --Line 154
--%PROPERTY r10; 

   --Line 162
--%PROPERTY r11; 

   --Line 170
--%PROPERTY r12;

tel;


